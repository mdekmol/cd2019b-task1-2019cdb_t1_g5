<h1>Introduction</h1>
<p><span>組員:</span></p>
<p><span><a href="https://github.com/40623201">40623201</a> 王君庭</span></p>
<p><span><a href="https://github.com/40623204">40623204</a> 張晏晴</span></p>
<p><span><a href="https://github.com/40623217">40623217</a> 楊傅博  </span></p>
<p><span><a href="https://github.com/40623223">40623223</a> 任明彥</span></p>
<p><span><a href="https://github.com/40623229">40623229</a> 陳宥安</span></p>
<p><span><a href="https://github.com/40623232">40623232</a> 余建杰</span></p>
<p><a href="https://github.com/40623242">40623242</a> 高宇辰</p>
<p><a href="https://github.com/40623243">40623243</a> 盧逸誠</p>
<p><a href="https://github.com/40623244">40623244</a> 林俊鎧</p>
<p><a href="https://github.com/40623248">40623248</a> 廖柏誠</p>
<p><a href="https://github.com/40423220">40423220</a> 林易寬</p>
<p><span>本倉儲位於:<a href="https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g5">https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g5</a></span></p>
<p></p>
<h1>Course Content</h1>
<p><a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g5/content/week1.html">week1</a></p>
<p><a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g5/content/week2.html">week2</a></p>
<p><a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g5/content/week3.html">week3</a></p>
<p><a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g5/content/week4.html">week4</a></p>
<p><a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g5/content/week5.html">week5</a></p>
<p><span>week6</span></p>
<p><span>week7</span></p>
<h2>week1</h2>
<p><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">上課內容：建立 Windows 64 位元可攜程式系統。</yt-formatted-string></p>
<p>1.下載 <a href="https://www.python.org/">Python</a>3.7.2，選擇  <a href="https://www.python.org/ftp/python/3.7.2/python-3.7.2-amd64.exe">Windows x86-64 executable installer</a> 。</p>
<p><img alt="" height="320" src="/images/python download.JPG" width="750"/></p>
<p><img alt="" height="347" src="/images/python download 3.7.2.JPG" width="619"/></p>
<p></p>
<p>2.安裝 Python 。</p>
<p><img alt="" height="462" src="/images/install python 3.7.2-1.JPG" width="750"/></p>
<p><img alt="" height="462" src="/images/install python 3.7.2-2.JPG" width="750"/></p>
<p><img alt="" height="462" src="/images/install python 3.7.2-3.JPG" width="750"/></p>
<p></p>
<p>3.下載 <a href="https://mh-nexus.de/en/hxd/">HxD</a> 。</p>
<p><img alt="" height="266" src="/images/hxd download.JPG" width="750"/></p>
<p>4.打開 HxD 後，更改 pip 。</p>
<p><img alt="" height="315" src="/images/modify pip.JPG" width="750"/></p>
<p><img alt="" height="439" src="/images/modify pip-1.JPG" width="750"/></p>
<p></p>
<p>5.下載 <a href="https://www.scintilla.org/SciTEDownload.html">SciTE</a> 。</p>
<p><img alt="" height="570" src="/images/scite download.JPG" width="750"/></p>
<p></p>
<p>6.修改 code.page 使中文可在 SciTE上顯示。</p>
<p><img caption="false" height="562" src="/images/modify scite-1.JPG" width="750"/></p>
<p><img caption="false" height="565" src="/images/modify scite-2.JPG" width="550"/></p>
<p></p>
<p>7.下載 <a href="https://sourceforge.net/projects/kdiff3/files/">KDiff</a> (用來比較差異性的工具)。</p>
<p><img alt="" height="445" src="/images/kdiff3 download.JPG" width="750"/></p>
<p></p>
<p>8.下載 <a href="https://bellard.org/tcc/">TCC</a> (Tiny C Compiler)。</p>
<p><img alt="" height="591" src="/images/tcc download.JPG" width="750"/></p>
<p>9.修改 start.bat 及 stop.bat。</p>
<p><img alt="" height="503" src="/images/modify start.JPG" width="750"/><img alt="" height="651" src="/images/modify stop.JPG" width="750"/></p>
<h2>week2</h2>
<h2>week3</h2>
<p>上課內容:</p>
<p>如何使用 ungit 進行檔案推送及版本的推還確認</p>
<p>1.先在y的home內部進行user config綁定</p>
<p><img alt="" height="429" src="/images/ungit set 1.png" width="800"/></p>
<p><img alt="" height="429" src="/images/ungit set 2.png" width="800"/></p>
<p>2.到python wsgi.py動態網站更改部分的資料</p>
<p>3.接著開啟ungit後進行commit上傳</p>
<p><img alt="" height="429" src="/images/ungit commit.png" width="800"/></p>
<p>4.上傳後再push即可更改成功</p>
<p><img alt="" height="429" src="/images/ungit push.png" width="800"/></p>
<p>5.到warehousing尋找commit recond</p>
<p><img alt="" height="429" src="/images/ungit recond.png" width="800"/></p>
<p>如何運用ungit回推版本:</p>
<p>1.先開啟ungit，並將某一個歷程編上tag</p>
<p><img alt="" height="429" src="/images/git checkout 1.png" width="800"/></p>
<p>2.使用指令 git checkout 到所要的歷程，如下圖是到expw4-18，再開啟python wsgi.py確定是否回歸到版本。</p>
<p><img alt="" height="429" src="/images/git checkout 3.png" width="800"/></p>
<p>3.接著回到當前版本需要使用指令 git checkout -- config/content.htm ， 接著用git checkout delprogress回到當前版本。</p>
<p><img alt="" height="429" src="/images/git checkout 4.png" width="800"/></p>
<p>4.再次回到python wsgi.py內察看是否回到當前版本</p>
<p><img alt="" height="429" src="/images/git checkout 2.png" width="800"/></p>
<h2>week4</h2>
<h2>week5</h2>
<h1>Git http&amp;SSH</h1>
<p>利用 ssh 對 git 改版, 必須使用  home/.ssh/config 設定, 才能透過 proxy 伺服器進行連線, 由於在 IPv6 環境下, 必須要透過 proxy 才能對 Git 連線, 因此若無 config, 無法對遠端改版</p>
<p></p>
<h1>Preceding Operation</h1>
<p>Directory structure</p>
<p><a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g5/content/Page%20editing.html">Page editing</a></p>
<p><a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g5/content/Insert%20program.html">Insert program</a></p>
<p><a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g5/content/Internet%20newsletter.html">Internet newsletter</a></p>
<p><a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g5/content/Pelican%20edit.html">Pelican edit</a></p>
<h2>Directory Structure</h2>
<p></p>
<p>第二位想要編輯這裡</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/9A-hg32eD-s" width="560"></iframe></p>
<p>CMSimfly 的動態系統採用 Python3 + Flask 建構, 並且利用 Beatifulsoup 解讀位於 contig 目錄中的 content.htm 超文件檔案.</p>
<p>content.htm 檔案可以透過動態系統中的 generate_pages 功能, 將超文件轉為位於 content 目錄中的個別頁面檔案.</p>
<p>動態系統與靜態系統則共用 downloads, images, static 等目錄, 其中 downloads 目錄存放在動態系統上傳的文件檔, 而 images 目錄則存放動態系統所上傳的影像檔案, 包括 jpg, png 與 gif 等格式圖檔.</p>
<p>static 目錄則存放在動態與靜態系統所需要的 Javascript 或 Brython 程式檔.</p>
<p>還有這裡</p>
<p>首先修改這裡</p>
<p></p>
<h2>Page editing</h2>
<p>CMSimfly 動態系統的網際編輯器採用 <a href="https://www.tiny.cloud/">TinyMCE4</a>, 可以放入一般超文件,  納入圖檔, 嵌入影片連結, 並且加入帶有行數的原始碼.</p>
<p>透過 File Upload 功能, 可以一次上傳多個檔案,  存入 downloads 目錄中儲存, 之後各頁面可以引入對應連結.</p>
<p>而圖檔的上傳與引用與一般檔案類似, 但上傳後存入 images 目錄中.</p>
<h2>Insert program</h2>
<p>CMSimfly 目前使用 Syntaxhighlighter 3.0.83:</p>
<p> <a href="http://alexgorbatchev.com/SyntaxHighlighter/">http://alexgorbatchev.com/SyntaxHighlighter/</a> </p>
<p>進行頁面中的程式碼高亮顯示.</p>
<p><br/><br/><br/><br/><br/></p>
<p><br/>Java <span>program</span></p>
<pre class="brush:java;auto-links:false;toolbar:false" contenteditable="false">import java.util.Scanner;

public class Life {
    public static void show(boolean[][] grid){
        String s = "";
        for(boolean[] row : grid){
            for(boolean val : row)
                if(val)
                    s += "*";
                else
                    s += ".";
            s += "\n";
        }
        System.out.println(s);
    }
    
    public static boolean[][] gen(){
        boolean[][] grid = new boolean[10][10];
        for(int r = 0; r &lt; 10; r++)
            for(int c = 0; c &lt; 10; c++)
                if( Math.random() &gt; 0.7 )
                    grid[r][c] = true;
        return grid;
    }
    
    public static void main(String[] args){
        boolean[][] world = gen();
        show(world);
        System.out.println();
        world = nextGen(world);
        show(world);
        Scanner s = new Scanner(System.in);
        while(s.nextLine().length() == 0){
            System.out.println();
            world = nextGen(world);
            show(world);
            
        }
    }
    
    public static boolean[][] nextGen(boolean[][] world){
        boolean[][] newWorld 
            = new boolean[world.length][world[0].length];
        int num;
        for(int r = 0; r &lt; world.length; r++){
            for(int c = 0; c &lt; world[0].length; c++){
                num = numNeighbors(world, r, c);
                if( occupiedNext(num, world[r][c]) )
                    newWorld[r][c] = true;
            }
        }
        return newWorld;
    }
    
    public static boolean occupiedNext(int numNeighbors, boolean occupied){
        if( occupied &amp;&amp; (numNeighbors == 2 || numNeighbors == 3))
            return true;
        else if (!occupied &amp;&amp; numNeighbors == 3)
            return true;
        else
            return false;
    }

    private static int numNeighbors(boolean[][] world, int row, int col) {
        int num = world[row][col] ? -1 : 0;
        for(int r = row - 1; r &lt;= row + 1; r++)
            for(int c = col - 1; c &lt;= col + 1; c++)
                if( inbounds(world, r, c) &amp;&amp; world[r][c] )
                    num++;

        return num;
    }

    private static boolean inbounds(boolean[][] world, int r, int c) {
        return r &gt;= 0 &amp;&amp; r &lt; world.length &amp;&amp; c &gt;= 0 &amp;&amp;
        c &lt; world[0].length;
    }

}</pre>
<p></p>
<p><br/><br/><br/><br/></p>
<p><span>Python <span>program</span></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def parse_content():
    """use bs4 and re module functions to parse content.htm"""
    #from pybean import Store, SQLiteWriter
    # if no content.db, create database file with cms table
    '''
    if not os.path.isfile(config_dir+"content.db"):
        library = Store(SQLiteWriter(config_dir+"content.db", frozen=False))
        cms = library.new("cms")
        cms.follow = 0
        cms.title = "head 1"
        cms.content = "content 1"
        cms.memo = "first memo"
        library.save(cms)
        library.commit()
    '''
    # if no content.htm, generate a head 1 and content 1 file
    if not os.path.isfile(config_dir+"content.htm"):
        # create content.htm if there is no content.htm
        File = open(config_dir + "content.htm", "w", encoding="utf-8")
        File.write("&lt;h1&gt;head 1&lt;/h1&gt;content 1")
        File.close()
    subject = file_get_contents(config_dir+"content.htm")
    # deal with content without content
    if subject == "":
        # create content.htm if there is no content.htm
        File = open(config_dir + "content.htm", "w", encoding="utf-8")
        File.write("&lt;h1&gt;head 1&lt;/h1&gt;content 1")
        File.close()
        subject = "&lt;h1&gt;head 1&lt;/h1&gt;content 1"
    # initialize the return lists
    head_list = []
    level_list = []
    page_list = []
    # make the soup out of the html content
    soup = bs4.BeautifulSoup(subject, 'html.parser')
    # 嘗試解讀各種情況下的標題
    soup = _remove_h123_attrs(soup)
    # 改寫 content.htm 後重新取 subject
    with open(config_dir + "content.htm", "wb") as f:
        f.write(soup.encode("utf-8"))
    subject = file_get_contents(config_dir+"content.htm")
    # get all h1, h2, h3 tags into list
    htag= soup.find_all(['h1', 'h2', 'h3'])
    n = len(htag)
    # get the page content to split subject using each h tag
    temp_data = subject.split(str(htag[0]))
    if len(temp_data) &gt; 2:
        subject = str(htag[0]).join(temp_data[1:])
    else:
        subject = temp_data[1]
    if n &gt;1:
            # i from 1 to i-1
            for i in range(1, len(htag)):
                head_list.append(htag[i-1].text.strip())
                # use name attribute of h* tag to get h1, h2 or h3
                # the number of h1, h2 or h3 is the level of page menu
                level_list.append(htag[i-1].name[1])
                temp_data = subject.split(str(htag[i]))
                if len(temp_data) &gt; 2:
                    subject = str(htag[i]).join(temp_data[1:])
                else:
                    subject = temp_data[1]
                # cut the other page content out of htag from 1 to i-1
                cut = temp_data[0]
                # add the page content
                page_list.append(cut)
    # last i
    # add the last page title
    head_list.append(htag[n-1].text.strip())
    # add the last level
    level_list.append(htag[n-1].name[1])
    temp_data = subject.split(str(htag[n-1]))
    # the last subject
    subject = temp_data[0]
    # cut the last page content out
    cut = temp_data[0]
    # the last page content
    page_list.append(cut)
    return head_list, level_list, page_list

</pre>
<p></p>
<p><br/><br/><br/><br/></p>
<p><span>C或C++ <span>program</span></span></p>
<p>請注意, 目前 CMSimfly 標題內文無法解讀 "/" 符號, 因此若本頁面的標題為  "C/C++程式碼", 則無法進行分頁.</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">/* Runge Kutta for a set of first order differential equations */
 
#include &lt;stdio.h&gt;
#include &lt;math.h&gt;
 
#define N 2 /* number of first order equations */
#define dist 0.1 /* stepsize in t*/
#define MAX 30.0 /* max for t */
 
FILE *output; /* internal filename */
FILE *output1; /* internal filename */
// 利用 pipe 呼叫 gnuplot 繪圖
FILE *pipe;
 
void runge4(double x, double y[], double step); /* Runge-Kutta function */
double f(double x, double y[], int i); /* function for derivatives */
 
void main(){
 
  double t, y[N];
  int j;
 
  output=fopen("osc.dat", "w"); /* external filename */
  output1=fopen("osc1.dat", "w"); /* external filename */
 
  y[0]=1.0; /* initial position */
  y[1]=0.0; /* initial velocity */
 
  //fprintf(output, "0\t%f\n", y[0]);
 
  for (j=1; j*dist&lt;=MAX ;j++) /* time loop */{
 
    t=j*dist;
    runge4(t, y, dist);
    fprintf(output, "%f\t%f\n", t, y[0]);
    fprintf(output1, "%f\t%f\n", t, y[1]);
  }
 
  fclose(output);
  fclose(output1);
 
  pipe = popen("gnuplot -persist","w");
  //fprintf(pipe,"set term png enhanced font \"v:/fireflysung.ttf\" 18 \n");
  fprintf(pipe,"set term png enhanced font \"y:/wqy-microhei.ttc\" 18 \n");
  //fprintf(pipe,"set yrange [68:70]\n");
  fprintf(pipe,"set output \"test.png\"\n");
  fprintf(pipe, "plot \"osc.dat\" title \"位移\" with lines, \"osc1.dat\" title \"速度\" with lines\n");
  fprintf(pipe,"quit\n");

  fprintf(pipe,"quit\n");
  pclose(pipe);
}
 
void runge4(double x, double y[], double step){
 
  double h=step/2.0, /* the midpoint */
  t1[N], t2[N], t3[N], /* temporary storage arrays */
  k1[N], k2[N], k3[N],k4[N]; /* for Runge-Kutta */
  int i;
 
  for (i=0;i&lt;N;i++){
 
    t1[i]=y[i]+0.5*(k1[i]=step*f(x,y,i));
  }
 
  for (i=0;i&lt;N;i++){
 
    t2[i]=y[i]+0.5*(k2[i]=step*f(x+h, t1, i));
  }
 
  for (i=0;i&lt;N;i++){
 
    t3[i]=y[i]+ (k3[i]=step*f(x+h, t2, i));
  }
 
  for (i=0;i&lt;N;i++){
 
    k4[i]= step*f(x+step, t3, i);
  }
 
  for (i=0;i&lt;N;i++){
 
    y[i]+=(k1[i]+2*k2[i]+2*k3[i]+k4[i])/6.0;
  }
}
 
double f(double x, double y[], int i){
 
  if (i==0)
    x=y[1]; /* derivative of first equation */
  if (i==1)
    x=-y[0]-0.5*y[1];
  return x;
}</pre>
<p></p>
<p><br/><br/><br/><br/></p>
<p><span>Lua <span>program</span></span></p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">-- 導入 js 模組
js = require("js")
-- 取得 window
window = js.global
-- 猜小於或等於 n 的整數
big = 100
-- 計算猜測次數, 配合 while 至少會猜一次
num = 1
-- 利用 window:prompt 方法回應取得使用者所猜的整數
guess = window:prompt("請猜一個介於 1 到 "..big.." 的整數")
-- 利用數學模組的 random 函數以亂數產生答案
answer = math.random(big)
output = ""
-- 若沒猜對, 一直猜到對為止
while answer ~= tonumber(guess) do
    if answer &gt; tonumber(guess) then
        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too small"
        print(output)
    else
        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too big"
        print(output)
    end 
    guess = window:prompt(output..", 請猜一個介於 1 到 "..big.." 的整數")
    num = num + 1
end
print("總共猜了 "..num.." 次, answer=guess="..answer.." - correct")
    </pre>
<p></p>
<p><br/><br/><br/></p>
<p><br/>Javascript <span>program</span></p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">STLViewer = function(stlpath, plotarea) {

	var mycanvas = document.getElementById(plotarea);
	var viewer = new JSC3D.Viewer(mycanvas)
	var theScene = new JSC3D.Scene;
	////Initialize with a default file:
	//var stlpath = "../../../assets/2013-10-23/stl/box.STL"
	//var stlpath = "../../../assets/2013-10-23/stl/taj.stl"
	viewer.setParameter('SceneUrl', stlpath);
    viewer.setParameter('InitRotationX', 20);
	viewer.setParameter('InitRotationY', 20);
	viewer.setParameter('InitRotationZ', 0);
	viewer.setParameter('ModelColor', '#CAA618');
	viewer.setParameter('BackgroundColor1', '#FFFFFF');
	viewer.setParameter('BackgroundColor2', '#383840');
	viewer.init();
	viewer.update();
	////init done
	var canvas_drop = document.getElementById('canvas-drop')
	/*var dropzone = document.getElementById('dropzone')
	dropzone.addEventListener('dragover', handleDragOver, false);
	dropzone.addEventListener('drop', handleFileSelect, false); */
	canvas_drop.addEventListener('dragover', handleDragOver, false);
	canvas_drop.addEventListener('drop', handleFileSelect, false);

////Drag and drop logic:
	function handleFileSelect(evt) {
	    evt.stopPropagation();
	    evt.preventDefault();
	    var files = evt.dataTransfer.files;
	    console.log(evt)
	    console.log(files)
	    preview_stl(files[0])
	  }

	  function handleDragOver(evt) {
	    evt.stopPropagation();
	    evt.preventDefault();
	    evt.dataTransfer.dropEffect = 'copy';
	  }

////jsc3d logic
	var handle_file_select = function(e) {
		e.stopPropagation()
		e.preventDefault()
		var f = e.target.files[0]
		preview_stl(f)
	}

	function preview_stl(f) {
		var reader = new FileReader()
		var ext = f.name.split(".")[1]

		function setup_viewer() {
			viewer.setParameter('InitRotationX', 20);
			viewer.setParameter('InitRotationY', 20);
			viewer.setParameter('InitRotationZ', 0);
			viewer.setParameter('ModelColor', '#CAA618');
			viewer.setParameter('BackgroundColor1', '#FFFFFF');
			viewer.setParameter('BackgroundColor2', '#383840');
			viewer.setParameter('RenderMode', "flat");
		}
		setup_viewer()

		reader.onload = (function(file) {
			return function(e) {
				theScene = new JSC3D.Scene
		    	stl_loader = new JSC3D.StlLoader()
		    	stl_loader.parseStl(theScene, e.target.result)
		      	//viewer.init()
		      	viewer.replaceScene(theScene)
		      	viewer.update()
		      	console.log("file reader onload")
			}
		})(f)

		if (ext.toLowerCase() != "stl") {
			alert("That doesn't appear to be an STL file.");
		} else {
			reader.readAsBinaryString(f)
		}
	}
}
</pre>
<p></p>
<p><br/><br/><br/><br/></p>
<p><br/>Html <span>program</span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;html&gt;
   &lt;head&gt;
      &lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;
      &lt;title&gt;CMSimfly&lt;/title&gt;
      &lt;link rel="stylesheet" type="text/css" href="/static/cmsimply.css"&gt;
   &lt;/head&gt;
   &lt;body&gt;
      &lt;div class='container'&gt;
      &lt;nav&gt;
         &lt;ul id='css3menu1' class='topmenu'&gt;
            &lt;li&gt;&lt;a href='/get_page/簡介'&gt;簡介&lt;/a&gt;
            &lt;li&gt;&lt;a href='/get_page/目錄結構'&gt;目錄結構&lt;/a&gt;
            &lt;li&gt;
               &lt;a href='/get_page/頁面編輯'&gt;頁面編輯&lt;/a&gt;
               &lt;ul&gt;
                  &lt;li&gt;
                     &lt;a href='/get_page/插入程式碼'&gt;插入程式碼&lt;/a&gt;
                     &lt;ul&gt;
                        &lt;li&gt;&lt;a href='/get_page/Java 程式碼'&gt;Java 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Python 程式碼'&gt;Python 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/C或C++程式碼'&gt;C或C++程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Lua 程式碼'&gt;Lua 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Javascript 程式碼'&gt;Javascript 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Html 原始碼'&gt;Html 原始碼&lt;/a&gt;&lt;/li&gt;
                        &lt;/li&gt;
                     &lt;/ul&gt;
               &lt;/ul&gt;
            &lt;li&gt;&lt;a href='/get_page/網際簡報'&gt;網際簡報&lt;/a&gt;
            &lt;li&gt;&lt;a href='/get_page/網誌編輯'&gt;網誌編輯&lt;/a&gt;
            &lt;li&gt;&lt;a href='/get_page/已知錯誤'&gt;已知錯誤&lt;/a&gt;&lt;/li&gt;
         &lt;/ul&gt;
      &lt;/nav&gt;
      &lt;section&gt;
         &lt;form method='post' action='/ssavePage'&gt;
         &lt;textarea class='simply-editor' name='page_content' cols='50' rows='15'&gt;&lt;h3&gt;Html 原始碼&lt;/h3&gt;&lt;/textarea&gt;
         &lt;input type='hidden' name='page_order' value='9'&gt;
         &lt;input type='submit' value='save'&gt;
         &lt;input type=button onClick="location.href='/get_page/Html 原始碼'" value='viewpage'&gt;
         &lt;/form&gt;
      &lt;/section&gt;
   &lt;/body&gt;
&lt;/html&gt;
COPY TO CLIPBOARD	</pre>
<p></p>
<h2>Internet newsletter</h2>
<p>CMSimfly 中採用 <a href="https://revealjs.com/#/">Reveal.js</a> 作為網際簡報, 其中的維護檔案位於 config/reveal.js, 而對應的簡報檔案則位於 reveal 目錄中.</p>
<h2>Pelican edit</h2>
<p>CMSimfly 採用 <a href="https://blog.getpelican.com/">Pelican blog</a> 系統, 編輯檔案位於 config/pelican.leo, 對應的</p>
<p> Markdown 原始檔案位於 markdown 目錄中, 而經 Pelican 轉換出的網誌超文件檔案則位於 blog 目錄中.</p>
<p>其餘在網誌文章中所需要的 Javascript 或 Brython 程式檔案, 則與 CMSimfly 及 Reveal.js 共用, 位於 static 目錄下.</p>
<p>上傳檔案與圖檔的引用則與 CMSimfly 架構相同.</p>
<p>第二位搶這裡也是不遺餘力</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/KZnCu1Sq1vo" width="560"></iframe></p>
<p>就是這樣編輯的</p>
<p>接下來修改這裡</p>
<p></p>
<h1>Q&amp;A</h1>
<h4>Q1 全部頁面會因無法正確解讀而誤刪</h4>
<p>在特定情況下, 系統會誤刪 config/content.htm 檔案, 目前在單頁或全部頁面編輯存檔之前, 或將上一版本的 content.htm 存入 content_back.htm, 若 content.htm 內容被程式誤刪, 可以利用備份檔案複製回原始內容後, 再進行後續處理.</p>
<h4>Q2 頁面標題不支援特殊符號</h4>
<p>各頁面標題目前不支援特殊符號, 例如: "/", "?" 等, 若已經發生程式無法解讀頁面的情況, 只能從編輯 config/content.htm 下手, 若系統位於遠端, 則後續必須要再設法提供一個額外的編輯 config/content.htm 檔案的網際連結功能.</p>
<h4>Q3 Video 引用不支援內部引用</h4>
<p>tinymce 中插入 video 的小視窗, 要移除引用的圖像與連結, 因為一般建議不要在內容中存入 .mp4 的影片資料, 而只接受引入影片 URL 連結.</p>
<h4>Q4 git pull 無法完成程序</h4>
<p><img alt="" height="56" src="/images/git 無法pull.PNG" width="964"/></p>
<p>無解</p>
<h4>Q5 ungit 無法使用</h4>
<p><img alt="" height="429" src="/images/ungit set 1.png" width="800"/></p>
<p><img alt="" height="429" src="/images/ungit set 2.png" width="800"/></p>
<p>必須先到y的home進行user config綁定的更改，這樣才能達到用ungit傳送資料的步驟。</p>
<h1>V-rep</h1>
<h1>Experience</h1>
<h2>20190222 week1</h2>
<h3>40623201-1</h3>
<p>這周是這學期第一次上課，為了補228連假的課而一次上8節課，真的有點吃不消，這周學習到怎麼建立個人可攜倉儲，以前只是用老師幫我們建立好的，所以不知道建立可攜倉儲的步驟那麼的繁瑣，要先下載<span> </span><a href="https://www.python.org/">Python</a><span>3.7.2、 <a href="https://mh-nexus.de/en/hxd/">HxD</a>(二位元編輯器)<span> 、 <a href="https://www.scintilla.org/SciTEDownload.html">SciTE</a>(編譯器)<span> 、</span></span></span><span><span><span><a href="https://sourceforge.net/projects/kdiff3/files/">KDiff(</a>用來比較差異性的<a href="https://sourceforge.net/projects/kdiff3/files/">)</a><span> 、</span></span></span></span><span><span><span><span> <a href="https://bellard.org/tcc/">TCC</a>(C</span></span></span></span><span><span><span><span><span>編譯器</span><span>)</span>等工具，還要更改start.bat 及 stop.bat，最後才能夠完成建立可攜倉儲，過程中在更改pip路徑時，不小心動到二位元資料，而導致路徑錯誤，最後複製其他還沒更改的，重新更改過就成功了。</span></span></span></span></p>
<p>我將操作步驟整理在 Course content 內的 <a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g5/content/week1.html">week1</a>。</p>
<h3>40623204-1</h3>
<h3>40623217-1</h3>
<p>心得:</p>
<p>這星期為了配合228連假的補課，所以從下午1:20一連貫的上到晚上9:50，雖然這途中有休息，但還是覺得非常的累，這周要做出一個自製的可攜Python系統，這東西除了要到官方的<a href="https://www.python.org/downloads/windows/">python3.7.2</a>下載外，還得載下<a href="https://www.scintilla.org/SciTEDownload.html">SciTe editor</a>的編譯器，為的是能夠在裡面寫下開啟python系統的編譯程式碼，除此之外要再下載一個<a href="https://mh-nexus.de/en/downloads.php?product=HxD20">hxd</a>二維編譯碼，為了要讓執行時可在自己要求的home裡頭執行，最後最重要的是必須了解之前python系統的start、stop批次檔的內容寫的是什麼，光是最後一個就是很煩躁的東西，因為只要弄錯，可能就無法開啟，或是開完後無法關閉，這天光是處理這個就很燒腦了，且還得用global檢查code是否是自己要的，做完後的我只感覺到稍微放鬆，畢竟一件東西最可怕的不是它有多難，而是如何去摸索並得知裏頭的涵義，就算了解了也不會覺得開心，而是一種奇怪的滿足感罷了。</p>
<p>簡易製作過程:<a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g5/content/week1.html">https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g5/content/week1.html</a></p>
<p><img alt="" height="429" src="/images/start批次.png" width="800"/></p>
<p><img alt="" height="429" src="/images/stop批次.png" width="800"/></p>
<h3>40623229-1</h3>
<h3>40623232-1</h3>
<h3>40623242-1</h3>
<h3>40623243-1</h3>
<h3>40623244-1</h3>
<h3>40623248-1</h3>
<h3>40423220-1</h3>
<h2>20190301 week2</h2>
<p>放假搂～２２８</p>
<p><img alt="" height="1280" src="/images/228放假.JPG" width="1280"/></p>
<h2>20190308 week3</h2>
<h3>40623201-3</h3>
<h3>40623204-3</h3>
<h3>40623217-3</h3>
<p></p>
<p>上課內容:</p>
<p>如何使用 ungit 進行檔案推送及版本的推還確認</p>
<p>1.先在y的home內部進行user config綁定</p>
<p><img alt="" height="429" src="/images/ungit set 1.png" width="800"/></p>
<p><img alt="" height="429" src="/images/ungit set 2.png" width="800"/></p>
<p>2.到python wsgi.py動態網站更改部分的資料</p>
<p>3.接著開啟ungit後進行commit上傳</p>
<p><img alt="" height="429" src="/images/ungit commit.png" width="800"/></p>
<p>4.上傳後再push即可更改成功</p>
<p><img alt="" height="429" src="/images/ungit push.png" width="800"/></p>
<p>5.到warehousing尋找commit recond</p>
<p><img alt="" height="429" src="/images/ungit recond.png" width="800"/></p>
<p>如何運用ungit回推版本:</p>
<p>1.先開啟ungit，並將某一個歷程編上tag</p>
<p><img alt="" height="429" src="/images/git checkout 1.png" width="800"/></p>
<p>2.使用指令 git checkout 到所要的歷程，如下圖是到expw4-18，再開啟python wsgi.py確定是否回歸到版本。</p>
<p><img alt="" height="429" src="/images/git checkout 3.png" width="800"/></p>
<p>3.接著回到當前版本需要使用指令 git checkout -- config/content.htm ， 接著用git checkout delprogress回到當前版本。</p>
<p><img alt="" height="429" src="/images/git checkout 4.png" width="800"/></p>
<p>4.再次回到python wsgi.py內察看是否回到當前版本</p>
<p><img alt="" height="429" src="/images/git checkout 2.png" width="800"/></p>
<p>心得:</p>
<p>經過這星期的ungit教學，讓我發現到這東西的存在可以很簡單的進行傳送資料到倉儲外，還能讓自己去確定之前的版本是否可以取得，能夠在需要的時候回到當初的事物狀況加以編輯，且可以透過這樣的方式，知道曾經做過哪些歷程，能過一目瞭然<span>，算是目前讓我覺得非常方便的操作</span>。</p>
<h3>40623223-3</h3>
<h3>40623229-3</h3>
<h3>40623232-3</h3>
<h3>40623242-3</h3>
<h3>40623243-3</h3>
<h3>40623244-3</h3>
<h3>40623248-3</h3>
<h3>40423220-3</h3>
<h2>20190315 week4</h2>
<h3>40623201-4</h3>
<h3>40623204-4</h3>
<h3>40623217-4</h3>
<h3>40623223-4</h3>
<h3>40623229-4</h3>
<h3>40623232-4</h3>
<h3>40623242-4</h3>
<h3>40623243-4</h3>
<h3>40623244-4</h3>
<h3>40623248-4</h3>
<h3>40423220-4</h3>
<h2>20190322 week5</h2>
<h3>40623201-5</h3>
<h3>40623204-5</h3>
<h3>40623217-5</h3>
<h3>40623223-5</h3>
<h3>40623229-5</h3>
<h3>40623232-5</h3>
<h3>40623242-5</h3>
<h3>40623243-5</h3>
<h3>40623244-5</h3>
<h3>40623248-5</h3>
<h3>40423220-5</h3>